// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model BingSearchTerms {
    id            String    @id @default(cuid())
    terms         String?
    impressions   Int?
    clicks        Int?
    date      String?
}

model GoogleSearchTerms {
    id            String    @id @default(cuid())
    terms         String?
    impressions   Int?
    clicks        Int?
    date      String?
}

model LeadEntry {
    id                  String    @id @default(cuid())
    leadID              Int?
    leadNo              Int?
    leadStatus          Int?
    leadDate            String?
    organisationID      Int?
    channel             Int?
    fieldOfInterest     Int?
    specificOfInterest  String?
    parameterOfInteres  String?
    diagnosisOfInterest String?
    matrixOfInterest    String?
    quantityOfInterest  String?
    lastEdited          DateTime?
}

model OrderEntry {
    id                      String    @id @default(cuid())
    customerID              Int?
    orderID                 Int?
    orderDate               DateTime?
    oderPrice               Int?
    storageTemp             String?
    donorID                 String?
    cbhSampleID             String?
    matrix                  String?
    supplierID              Int?
    supplierSampleID        String?
    productID               Int?
    countryID               Int?
    quantity                Float?
    unit                    String?
    age                     Int?
    gender                  String?
    ethnicity               String?
    labParameter            String?
    resultNumerical         Int?
    resultUnit              String?
    resultInterpretation    String?
    testMethod              String?
    testKitManufacturer     String?
    testSystemManufacturer  String?
    diagnosis               String?
    icd                     String?
    histologicalDiagnosis   String?
    organ                   String?
    collectionCountry       String?
    collectionDate          DateTime?
    lstEdited               DateTime?
}


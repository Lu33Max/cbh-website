import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import Header from "~/components/header";
import Sidebar from "~/components/sidebar";
import { useEffect, useState } from "react";

type Filter = {
  cbhMasterID: string | undefined,
  cbhDonorID: string | undefined,
  cbhSampleID: string | undefined,
  price: { 
    min: number | undefined, 
    max: number | undefined 
  },
  matrix: string[],
  quantity: {
    min: number | undefined,
    max: number | undefined,
  },
  unit: string[],
  labParameter: string[],
  resultInterpretation: string[],
  //resultNumerical
  resultUnit: string[],
  diagnosis: string[],
  ICDCode: string[]
}

const Search: NextPage = () => {
  return (
    <>
      <Head>
        <title>Central BioHub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico"/>
      </Head>
      
      <main className="bg-gray-200 min-h-screen overflow-x-hidden">
        <Header/>
        <span className="grid grid-cols-7">
            <Sidebar/>
            <Content/>
        </span>
      </main>
    </>
  );
};

export default Search;

const Content: React.FC = () => {
  const defaultFilter: Filter = {
    cbhMasterID: undefined, 
    cbhDonorID: undefined, 
    cbhSampleID: undefined,
    price: {
      min: undefined,
      max: undefined,
    },
    matrix: [],
    quantity: {
      min: undefined,
      max: undefined,
    },
    unit: [],
    labParameter: [],
    resultInterpretation: [],
    resultUnit: [],
    diagnosis: [],
    ICDCode: []
  }

  const [page, setPage] = useState<number>(1)
  const [pagelength, setPagelength] = useState<number>(100)
  const [search, setSearch] = useState<string | undefined>()
  const [filter, setFilter] = useState<Filter>(defaultFilter)

  const { data: samples, refetch: refetchSamples } = api.samples.getAll.useQuery(
      { pages: undefined, lines: undefined, search: search }
  )

  useEffect(() => {
    void refetchSamples()
  }, [search, refetchSamples])

  return(
      <div>
        <input type="text" onKeyDown={e => {
          if(e.key === "Enter"){
            setSearch(e.currentTarget.value)
            e.currentTarget.value = ""
          }
        }}/>
        <div className="mx-4 my-5">
          {JSON.stringify(samples)}
        </div>
      </div>
  )
}